plugins {
  id 'java'
  id 'application'
  id 'org.jetbrains.kotlin.jvm' version '1.8.10'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.beryx.runtime' version '1.12.5'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.9.2'
}

sourceCompatibility = '17'
targetCompatibility = '17'

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

application {
  mainClass = 'com.example.agentsjfx.AgentsApp'
  applicationName = 'agents-jfx'
}

[compileKotlin, compileTestKotlin].forEach {
  it.kotlinOptions {
    jvmTarget = '17'  }
}

javafx {
  version = '17.0.6'
  modules = ['javafx.controls', 'javafx.fxml', 'javafx.swing']
}

def letsPlotVersion = '3.2.0-rc1'
def letsPlotKotlinVersion = '4.4.1'
def slf4jVersion = '2.0.7'
def math3Version = '3.6.1'

dependencies {
  testImplementation 'org.jetbrains.kotlin:kotlin-test'
  implementation "org.jetbrains.lets-plot:lets-plot-jfx:$letsPlotVersion"
  implementation "org.jetbrains.lets-plot:lets-plot-kotlin-jvm:$letsPlotKotlinVersion"
  implementation "org.slf4j:slf4j-simple:$slf4jVersion" // Enable logging to console
  // https://mvnrepository.com/artifact/org.apache.commons/commons-math3
  implementation "org.apache.commons:commons-math3:$math3Version"
}

jar {
  manifest {
    attributes 'Main-Class': application.mainClass
  }
}

test {
  useJUnitPlatform()
}

runtime {
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']

  launcher {
    noConsole = true
  }

  jpackage {
    // Uncomment and adjust the following line if your runtime task is configured to generate images for multiple platforms
    // targetPlatformName = "mac"

    def currentOs = org.gradle.internal.os.OperatingSystem.current()
    def imgType = currentOs.windows ? 'ico' : currentOs.macOsX ? 'icns' : 'png'
    imageOptions += ['--icon', "src/main/resources/hellofx.$imgType"]
    installerOptions += ['--resource-dir', "src/main/resources"]
    installerOptions += ['--vendor', 'Acme Corporation']

    if(currentOs.windows) {
      installerOptions += ['--win-per-user-install', '--win-dir-chooser', '--win-menu', '--win-shortcut']
    }
    else if (currentOs.linux) {
      installerOptions += ['--linux-package-name', 'hellofx','--linux-shortcut']
    }
    else if (currentOs.macOsX) {
      installerOptions += ['--mac-package-name', 'hellofx']
    }
  }
}
